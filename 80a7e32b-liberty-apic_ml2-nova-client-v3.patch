#!/bin/sh
set -e

patch="/usr/bin/patch"
package="apic_ml2"

if ! [ -x "$patch" ] ; then
    echo "ERROR: Executable '$patch' not installed." 1>&2
    echo "ERROR: Please install '$patch' using 'yum install patch' or equivalent" 1>&2
    exit 1
fi

rootdir=`python -c "import $package; print $package.__path__[0]" 2>/dev/null || :`
if [ -z "$rootdir" ] ; then
    echo "ERROR: Package '$package' not installed on this host"
    exit 1
fi

echo "INFO: Patching $package at $rootdir"
cd $rootdir
$patch -p 2 <<'EOF'
From 80a7e32b42a4b33170bc42c7eb448cc0b5268ab0 Mon Jun 26 05:34:31 2017
Subject: Use neutron Notifier's Nova client to retrieve VMs' name
---
 .../plugins/ml2/drivers/cisco/apic/nova_client.py  | 30 +---------------------
 1 file changed, 1 insertion(+), 29 deletions(-)

diff --git a/apic_ml2/neutron/plugins/ml2/drivers/cisco/apic/nova_client.py b/apic_ml2/neutron/plugins/ml2/drivers/cisco/apic/nova_client.py
index d8d2642..2e8d49e 100644
--- a/apic_ml2/neutron/plugins/ml2/drivers/cisco/apic/nova_client.py
+++ b/apic_ml2/neutron/plugins/ml2/drivers/cisco/apic/nova_client.py
@@ -10,12 +10,8 @@
 #    License for the specific language governing permissions and limitations
 #    under the License.
 
-from keystoneclient import auth as ks_auth
-from keystoneclient import session as ks_session
 from neutron.notifiers import nova as n_nova
-from novaclient import client as nclient
 from novaclient import exceptions as nova_exceptions
-from oslo_config import cfg
 from oslo_log import log as logging
 
 LOG = logging.getLogger(__name__)
@@ -24,31 +20,7 @@ LOG = logging.getLogger(__name__)
 class NovaClient(object):
 
     def __init__(self):
-
-        auth = ks_auth.load_from_conf_options(cfg.CONF, 'nova')
-        endpoint_override = None
-
-        if not auth:
-
-            if cfg.CONF.nova_admin_tenant_id:
-                endpoint_override = "%s/%s" % (cfg.CONF.nova_url,
-                                               cfg.CONF.nova_admin_tenant_id)
-
-            auth = n_nova.DefaultAuthPlugin(
-                auth_url=cfg.CONF.nova_admin_auth_url,
-                username=cfg.CONF.nova_admin_username,
-                password=cfg.CONF.nova_admin_password,
-                tenant_id=cfg.CONF.nova_admin_tenant_id,
-                tenant_name=cfg.CONF.nova_admin_tenant_name,
-                endpoint_override=endpoint_override)
-
-        session = ks_session.Session.load_from_conf_options(
-            cfg.CONF, 'nova', auth=auth)
-        novaclient_cls = nclient.get_client_class(n_nova.NOVA_API_VERSION)
-
-        self.nclient = novaclient_cls(
-            session=session,
-            region_name=cfg.CONF.nova.region_name)
+        self.nclient = n_nova.Notifier().nclient
 
     def get_server(self, server_id):
         try:
-- 
EOF

echo "INFO: Restarting neutron ..."
systemctl restart neutron-server.service

echo "INFO: Patch applied successfully"
