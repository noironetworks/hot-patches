#!/bin/sh
set -e

patch="/usr/bin/patch"
package="gbpservice"

if ! [ -x "$patch" ] ; then
    echo "ERROR: Executable '$patch' not installed." 1>&2
    echo "ERROR: Please install '$patch' using 'apt-get install patch' or equivalent" 1>&2
    exit 1
fi

rootdir=`python -c "import $package; print $package.__path__[0]" 2>/dev/null || :`
if [ -z "$rootdir" ] ; then
    echo "ERROR: Package '$package' not installed on this host"
    exit 1
fi

echo "INFO: Patching $package at $rootdir"
cd $rootdir
$patch -p 2 <<'EOF'
From feb6e2dd5039831bef204be177471277885aa513 Mon Jun 26 09:51:05 2017
Subject: Use configured user domain and project domain on Keystone client

Change-Id: I1157acb71d9b76c1c7a9134df1500bb69dc836a2
---
 .../neutron/services/grouppolicy/drivers/cisco/apic/apic_mapping.py | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/gbpservice/neutron/services/grouppolicy/drivers/cisco/apic/apic_mapping.py b/gbpservice/neutron/services/grouppolicy/drivers/cisco/apic/apic_mapping.py
index 13609e3..5228277 100644
--- a/gbpservice/neutron/services/grouppolicy/drivers/cisco/apic/apic_mapping.py
+++ b/gbpservice/neutron/services/grouppolicy/drivers/cisco/apic/apic_mapping.py
@@ -288,13 +288,13 @@ class ApicMappingDriver(api.ResourceMappingDriver,
             if client:
                 keystone_authtoken = cfg.CONF.keystone_authtoken
                 pass_params = (
-                    apic_mapper.APICNameMapper.get_key_password_params(
+                    apic_mapper.APICNameMapper.get_key_password_params_ext(
                         keystone_authtoken))
                 admin_auth = keypassword.Password(
                     auth_url=pass_params[0],
                     username=pass_params[1], password=pass_params[2],
-                    tenant_name=pass_params[3],
-                    user_domain_id='Default', project_domain_id='Default')
+                    tenant_name=pass_params[3], user_domain_id=pass_params[5],
+                    project_domain_id=pass_params[4])
                 session = keysession.Session(auth=admin_auth)
             ApicMappingDriver.manager = apic_manager.APICManager(
                 apic_model.ApicDbModel(), logging, network_config, apic_config,
-- 
2.10.0
EOF

echo "INFO: Patch applied successfully"
