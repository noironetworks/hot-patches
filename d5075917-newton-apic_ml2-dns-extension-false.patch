#!/bin/sh
set -e

patch="/usr/bin/patch"
package="apic_ml2"

if ! [ -x "$patch" ] ; then
    echo "ERROR: Executable '$patch' not installed."
    exit 1
fi

rootdir=`python -c "import $package; print $package.__path__[0]" 2>/dev/null || :`
if [ -z "$rootdir" ] ; then
    echo "ERROR: Package '$package' not installed on this host"
    exit 1
fi

echo "INFO: Patching $package at $rootdir"
cd $rootdir
$patch -p 2 <<'EOF'
From d50759177eab8170950ba7bf169a81e6cd9083fa Thu Jun 22 15:21:08 2017
Subject: Allow floating IPs to be allocated with ML2 DNS extension
---
 apic_ml2/neutron/services/l3_router/l3_apic.py | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/apic_ml2/neutron/services/l3_router/l3_apic.py b/apic_ml2/neutron/services/l3_router/l3_apic.py
index f39813b..6b003d7 100644
--- a/apic_ml2/neutron/services/l3_router/l3_apic.py
+++ b/apic_ml2/neutron/services/l3_router/l3_apic.py
@@ -54,6 +54,9 @@ class ApicL3ServicePlugin(common_db_mixin.CommonDbMixin,
     supported_extension_aliases = ["router", "ext-gw-mode", "extraroute",
                                    "l3-flavors"]
 
+    # Set this to False so that the mixin code doesn't try to call
+    # _process_dns_floatingip_create_precommit
+    _dns_integration = False
     def __init__(self):
         super(ApicL3ServicePlugin, self).__init__()
         self.synchronizer = None
-- 
EOF
echo "INFO: ... Done"
